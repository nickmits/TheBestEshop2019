@page
@{
    ViewData["Title"] = "Catalog";
    @model IndexModel
}
<section class="esh-catalog-hero">
    <div class="container">
        <img class="esh-catalog-title" src="~/images/main_banner_text.png" />
    </div>
</section>
<section class="esh-catalog-filters">
    <div class="container">
        <form method="get">
            <label class="esh-catalog-label" data-title="brand">
                <select asp-for="@Model.CatalogModel.BrandFilterApplied" asp-items="@Model.CatalogModel.Brands" class="esh-catalog-filter"></select>
            </label>
            <label class="esh-catalog-label" data-title="type">
                <select asp-for="@Model.CatalogModel.TypesFilterApplied" asp-items="@Model.CatalogModel.Types" class="esh-catalog-filter"></select>
            </label>
            <input class="esh-catalog-send" type="image" src="images/arrow-right.svg" />
        </form>
    </div>
</section>
<div class="container">
    <button type="button" class="btn btn-outline-info" data-toggle="modal" data-target="#createPopup">
        CREATE NEW
    </button>

    @if (Model.CatalogModel.CatalogItems.Any())
    {
        <partial name="_pagination" for="CatalogModel.PaginationInfo" />

        <div class="esh-catalog-items row">
            @foreach (var catalogItem in Model.CatalogModel.CatalogItems)
            {
                <div class="esh-catalog-item col-md-4">
                    <partial name="_product" for="@catalogItem" />
                </div>
            }
        </div>
        <partial name="_pagination" for="CatalogModel.PaginationInfo" />
    }
    else
    {
        <div class="esh-catalog-items row">
            THERE ARE NO RESULTS THAT MATCH YOUR SEARCH
        </div>
    }
</div>

<div class="modal fade" id="createPopup" tabindex="-1" role="dialog" aria-labelledby="createPopupLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createPopupLabel">Update product's price</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <div class="form-group">
                    <label for="Price" class="col-form-label">Price</label>
                    <input id="newprice" type="number" name="Price" />
                    <br />
                    <label for="Name" class="col-form-label">Name</label>
                    <input id="newname" type="text" name="Name" />
                    <br />
                    <label for="Description" class="col-form-label">Description</label>
                    <input id="newdescription" type="text" name="Description" />
                    <br />
                    <label for="CatalogType" class="col-form-label">CatalogType</label>
                    <input id="newcatalogtype" type="text" name="CatalogType" />
                    <br />
                    <label for="CatalogBrand" class="col-form-label">CatalogBrand</label>
                    <input id="newcatalogbrand" type="text" name="CatalogBrand" />
                    <br />
                    <label for="Picture" class="col-form-label">Picture</label>
                    <input id="newpicture" type="file" name="Picture" />
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" onclick="createProduct()" id="confirmChanges" class="btn btn-primary">Save</button>
            </div>

        </div>
    </div>
</div>

<script>
    async function createProduct() {
        let name = document.getElementById("newname").value;
        let price = document.getElementById("newprice").value;
        let desc = document.getElementById("newdescription").value;
        let catType = document.getElementById("newcatalogtype").value;
        let catBrand = document.getElementById("newcatalogbrand").value;
        let pic = document.querySelector('input[type="file"]');

        let data = new FormData()
		data.append('Picture', pic.files[0])
		data.append('Name', name)
		data.append('Price', price)
        data.append('Description', desc)
        data.append('CatalogType', catType)
        data.append('CatalogBrand', catBrand)

        const urlToSendRequest = "https://" + window.location.host + "/CreateProduct";

		const rawData = await fetch(urlToSendRequest,
		{
			method: 'POST',
			credentials: "same-origin",
			body: data
            });
        location.reload();
    }

    document.addEventListener("DOMContentLoaded", function (event) {
        $('#editPopup').on('show.bs.modal', function (event) {
            let button = $(event.relatedTarget) // Button that triggered the modal
            let prodId = button.data('edid') // Extract info from data-* attributes
            let prodPrice = button.data('edprice') // Extract info from data-* attributes
            let modal = $(this)
            modal.find('#priceEdit').val(prodPrice);
            modal.find('#idEdit').val(prodId);
        })

        $('#deletePopup').on('show.bs.modal', function (event) {
            let button = $(event.relatedTarget) // Button that triggered the modal
            let prodId = button.data('delid') // Extract info from data-* attributes
            let modal = $(this)
            modal.find('#idDelete').val(prodId);
        })
    });
</script>
